stages:         
  - build

variables:
  PACKAGE_NAME: "Macro-Keyboard"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${PACKAGE_NAME}"


build-job:  
  stage: build
  tags:
    - docker
  image:
    name: espressif/idf:v5.1.1
  variables:
    WORKDIR: "./firmware"
  script:
    - cd ${WORKDIR} && idf.py build
  after_script:
    - ls -lAh ${WORKDIR}/build
    - python ${WORKDIR}/scripts/create_manifest.py
      --file ${WORKDIR}/build/flasher_args.json
      --output ${WORKDIR}/manifest.json
      --version ${CI_COMMIT_SHORT_SHA}
  artifacts:
    expire_in: 2 days
    public: true
    paths:
      - ${WORKDIR}/build/*.bin
      - ${WORKDIR}/build/*/*.bin
      - ${WORKDIR}/build/flash_args
      - ${WORKDIR}/manifest.json


# upload-job:
#   stage: release
#   image: curlimages/curl:latest
#   tags:
#     - docker
#   rules:
#     - if: $CI_COMMIT_TAG                # Run this job when a tag is created
#   script:
#     - |
#       echo "Uploading package ${MACOS_PACKAGE}"
#       curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file "packages/${MACOS_PACKAGE}" "${PACKAGE_REGISTRY_URL}/${MACOS_PACKAGE}"
#       echo "Uploading package ${WINDOWS_PACKAGE}"
#       curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file "packages/${WINDOWS_PACKAGE}" "${PACKAGE_REGISTRY_URL}/${WINDOWS_PACKAGE}"
#       echo "Uploading package ${LINUX_PACKAGE}"
#       curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file "packages/${LINUX_PACKAGE}" "${PACKAGE_REGISTRY_URL}/${LINUX_PACKAGE}"

